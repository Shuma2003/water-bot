const { Telegraf } = require('telegraf');
const schedule = require('node-schedule');

const bot = new Telegraf(process.env.BOT_TOKEN || '7630888936:AAGCUMPLwLf7uLVcNmRif7Iz2VQcRPVrWdU');

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const users = {};

// –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã —Å —ç–º–æ–¥–∑–∏
const motivPhrases = [
    {text: "üíß –í–æ–¥–∞ ‚Äì —Ç–≤–æ—ë —Ç–æ–ø–ª–∏–≤–æ! –í—ã–ø–µ–π —Å—Ç–∞–∫–∞–Ω –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!", emoji: "üíß"},
    {text: "üöÄ –ö–∞–∫ –æ—Ä–∏–∫—Å –≤ –ø—É—Å—Ç—ã–Ω–µ? –ù–µ –±—É–¥—å –∏–º ‚Äì –ø–æ–ø–µ–π –≤–æ–¥—ã!", emoji: "üê™"},
    {text: "üåµ –î–∞–∂–µ –∫–∞–∫—Ç—É—Å—ã –ø—å—é—Ç —á–∞—â–µ! –ù–µ –æ—Ç—Å—Ç–∞–≤–∞–π!", emoji: "üåµ"},
    {text: "üß† –ë–µ–∑ –≤–æ–¥—ã –º–æ–∑–≥ —Å–æ—Ö–Ω–µ—Ç... –ù–µ –¥–∞–π –µ–º—É –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Å—É—Ö–∞—Ä—å!", emoji: "üß†"},
    {text: "üí™ –¢—ã –∂–µ –Ω–µ —Ö–æ—á–µ—à—å –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç? –ü–µ–π –≤–æ–¥—É!", emoji: "üçá"},
    {text: "üö∞ –û–¥–∏–Ω —Å—Ç–∞–∫–∞–Ω —Å–µ–π—á–∞—Å ‚Äì –∏ —Ç—ã –º–æ–ª–æ–¥–µ—Ü!", emoji: "üëè"},
    {text: "‚è≥ –í—Ä–µ–º—è –ø–∏—Ç—å –≤–æ–¥—É! –ü—Ä—è–º–æ —Å–µ–π—á–∞—Å!", emoji: "‚è∞"}
];

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
function getWaterKeyboard() {
    return {
        reply_markup: {
            inline_keyboard: [
                [{text: '–í—ã–ø–∏–ª(–∞)! ‚úÖ', callback_data: 'drank'}],
                [{text: '–û—Ç–ª–æ–∂–∏—Ç—å –Ω–∞ 15 –º–∏–Ω ‚è≥', callback_data: 'delay_15min'}]
            ]
        }
    };
}

// –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç–∞
bot.start((ctx) => {
    const chatId = ctx.chat.id;
    users[chatId] = {
        reminders: true,
        timezone: 3,
        waterCount: 0,
        lastDrinkTime: null,
        streak: 0,
        achievements: []
    };
    
    return ctx.replyWithMarkdown(`
–ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}! üí¶ –Ø —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –≥–∏–¥ –ø–æ –≤–æ–¥–Ω–æ–º—É –±–∞–ª–∞–Ω—Å—É.

*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/start - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
/achievements - –¢–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
/stop - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
/resume - –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    `);
});

// –ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏
bot.help((ctx) => ctx.replyWithMarkdown(`
*–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞:*
–Ø –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–∏—Ç—å –≤–æ–¥—É –∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞ —Å 8:00 –¥–æ 22:00.

*–ö–æ–º–∞–Ω–¥—ã:*
/stats - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ —Å–µ–≥–æ–¥–Ω—è
/achievements - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
/settings - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
/stop - –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
/resume - –í–∫–ª—é—á–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å–Ω–æ–≤–∞
`));

// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
bot.command('stats', (ctx) => {
    const chatId = ctx.chat.id;
    if (users[chatId]) {
        const count = users[chatId].waterCount || 0;
        let message = `–°–µ–≥–æ–¥–Ω—è —Ç—ã –≤—ã–ø–∏–ª ${count} —Å—Ç–∞–∫–∞–Ω–æ–≤ –≤–æ–¥—ã. `;
        
        if (count < 4) message += "–ú–æ–∂–Ω–æ –ª—É—á—à–µ!";
        else if (count < 8) message += "–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!";
        else message += "–û—Ç–ª–∏—á–Ω–æ! –¢—ã –º–æ–ª–æ–¥–µ—Ü!";
        
        if (users[chatId].streak > 0) {
            message += `\n–¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è: ${users[chatId].streak} –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥!`;
        }
        
        return ctx.reply(message);
    }
    return ctx.reply('–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start');
});

// –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
bot.command('achievements', (ctx) => {
    const chatId = ctx.chat.id;
    if (users[chatId]) {
        if (users[chatId].achievements.length === 0) {
            return ctx.reply('–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π. –ü—Ä–æ–¥–æ–ª–∂–∞–π –ø–∏—Ç—å –≤–æ–¥—É!');
        }
        return ctx.reply(`–¢–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:\n- ${users[chatId].achievements.join('\n- ')}`);
    }
    return ctx.reply('–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start');
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏
bot.command('settings', (ctx) => {
    return ctx.reply('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–µ–π—á–∞—Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø—Ä–∏—Ö–æ–¥—è—Ç –∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞ —Å 8:00 –¥–æ 22:00.');
});

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
bot.command('stop', (ctx) => {
    const chatId = ctx.chat.id;
    if (users[chatId]) {
        users[chatId].reminders = false;
        return ctx.reply('–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /resume —á—Ç–æ–±—ã –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å.');
    }
    return ctx.reply('–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start');
});

// –í–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
bot.command('resume', (ctx) => {
    const chatId = ctx.chat.id;
    if (users[chatId]) {
        users[chatId].reminders = true;
        return ctx.reply('–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
    }
    return ctx.reply('–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start');
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
function sendReminder(chatId) {
    if (users[chatId] && users[chatId].reminders) {
        const randomMotiv = motivPhrases[Math.floor(Math.random() * motivPhrases.length)];
        const message = `${randomMotiv.emoji} ${randomMotiv.text}\n\n–¢–µ–∫—É—â–∏–π —Å—á–µ—Ç: ${users[chatId].waterCount} —Å—Ç–∞–∫–∞–Ω–æ–≤`;
        
        bot.telegram.sendMessage(chatId, message, getWaterKeyboard())
            .then(() => {
                setTimeout(() => {
                    if (users[chatId] && (!users[chatId].lastDrinkTime || 
                        Date.now() - new Date(users[chatId].lastDrinkTime).getTime() > 15*60*1000)) {
                        bot.telegram.sendMessage(chatId, "‚è∞ –ö–∞–∂–µ—Ç—Å—è, —Ç—ã –µ—â—ë –Ω–µ –≤—ã–ø–∏–ª –≤–æ–¥—É! –≠—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è!");
                    }
                }, 15*60*1000);
            });
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–í—ã–ø–∏–ª"
bot.action('drank', async (ctx) => {
    const chatId = ctx.chat.id;
    if (!users[chatId]) return;

    users[chatId].waterCount += 1;
    users[chatId].lastDrinkTime = new Date();
    
    await ctx.answerCbQuery();
    try { await ctx.deleteMessage(); } catch(e) {}
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    let achievement = '';
    if (users[chatId].waterCount === 5 && !users[chatId].achievements.includes('5 —Å—Ç–∞–∫–∞–Ω–æ–≤ –∑–∞ –¥–µ–Ω—å')) {
        users[chatId].achievements.push('5 —Å—Ç–∞–∫–∞–Ω–æ–≤ –∑–∞ –¥–µ–Ω—å');
        achievement = '\n\nüéâ –ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: 5 —Å—Ç–∞–∫–∞–Ω–æ–≤ –∑–∞ –¥–µ–Ω—å!';
    } else if (users[chatId].waterCount === 8 && !users[chatId].achievements.includes('8 —Å—Ç–∞–∫–∞–Ω–æ–≤ –∑–∞ –¥–µ–Ω—å')) {
        users[chatId].achievements.push('8 —Å—Ç–∞–∫–∞–Ω–æ–≤ –∑–∞ –¥–µ–Ω—å');
        achievement = '\n\nüèÜ –ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: 8 —Å—Ç–∞–∫–∞–Ω–æ–≤ –∑–∞ –¥–µ–Ω—å!';
    }
    
    await ctx.reply(`‚úÖ –ü—Ä–∏–Ω—è—Ç–æ! –°–µ–≥–æ–¥–Ω—è: ${users[chatId].waterCount} —Å—Ç–∞–∫–∞–Ω–æ–≤${achievement}`);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û—Ç–ª–æ–∂–∏—Ç—å"
bot.action('delay_15min', async (ctx) => {
    await ctx.answerCbQuery('–ù–∞–ø–æ–º–Ω—é —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç!');
    setTimeout(() => sendReminder(ctx.chat.id), 15*60*1000);
});

// –í–µ—á–µ—Ä–Ω–∏–π –æ—Ç—á–µ—Ç
schedule.scheduleJob('0 22 * * *', () => {
    Object.keys(users).forEach(chatId => {
        const today = users[chatId]?.waterCount || 0;
        let message = '';
        
        if (today < 4) {
            message = `üòê –°–µ–≥–æ–¥–Ω—è —Ç–æ–ª—å–∫–æ ${today} —Å—Ç–∞–∫–∞–Ω–æ–≤... –ó–∞–≤—Ç—Ä–∞ –±—É–¥–µ—Ç –ª—É—á—à–µ!`;
            users[chatId].streak = 0;
        } else if (today < 8) {
            message = `üëç –ù–µ–ø–ª–æ—Ö–æ! ${today} —Å—Ç–∞–∫–∞–Ω–æ–≤.`;
            users[chatId].streak += 1;
        } else {
            message = `üéâ –§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞! ${today} —Å—Ç–∞–∫–∞–Ω–æ–≤ - —Ç—ã –Ω–∞ –≤–µ—Ä–Ω–æ–º –ø—É—Ç–∏!`;
            users[chatId].streak += 1;
            
            if (users[chatId].streak === 3 && !users[chatId].achievements.includes('3 –¥–Ω—è –ø–æ–¥—Ä—è–¥')) {
                users[chatId].achievements.push('3 –¥–Ω—è –ø–æ–¥—Ä—è–¥');
                message += '\n\nüî• –ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: 3 –¥–Ω—è –ø–æ–¥—Ä—è–¥!';
            }
        }
        
        if (users[chatId].streak > 0) {
            message += `\n–¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è: ${users[chatId].streak} ${users[chatId].streak === 1 ? '–¥–µ–Ω—å' : '–¥–Ω—è'} –ø–æ–¥—Ä—è–¥!`;
        }
        
        bot.telegram.sendMessage(chatId, message);
        users[chatId].waterCount = 0;
    });
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
function setupReminders() {
    const rule = new schedule.RecurrenceRule();
    rule.hour = [8, 10, 12, 14, 16, 18, 20, 22];
    rule.minute = 0;
    
    schedule.scheduleJob(rule, () => {
        Object.keys(users).forEach(chatId => {
            sendReminder(chatId);
        });
    });
}

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch().then(() => {
    console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
    setupReminders();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));